@@ -1011,9 +1011,9 @@ def get_dhcp_opts(context, network_ref, fixedips):
     # NOTE(vish): if we are in multi-host mode and we are not sharing
     #             addresses, then we actually need to hand out the
     #             dhcp server address as the gateway.
-    if network_ref['multi_host'] and not (network_ref['share_address'] or
-                                          CONF.share_dhcp_address):
-        gateway = network_ref['dhcp_server']
+    #if network_ref['multi_host'] and not (network_ref['share_address'] or
+    #                                      CONF.share_dhcp_address):
+    #    gateway = network_ref['dhcp_server']
     hosts = []
     if CONF.use_single_default_gateway:
         for fixedip in fixedips:
@@ -1136,6 +1136,8 @@ def restart_dhcp(context, dev, network_ref, fixedips):
            '--dhcp-hostsfile=%s' % _dhcp_file(dev, 'conf'),
            '--dhcp-script=%s' % CONF.dhcpbridge,
            '--no-hosts',
+           '--cache-size=0',
+           '--no-negcache',
            '--leasefile-ro']
 
     # dnsmasq currently gives an error for an empty domain,
@@ -1608,6 +1610,7 @@ def ensure_bridge(bridge, interface, net_attrs=None, gateway=True,
             # bridge, which will either be the vlan interface, or a
             # physical NIC.
             _execute('ip', 'link', 'set', bridge, 'up', run_as_root=True)
+            _execute('ip', 'link', 'set', bridge, 'promisc', 'on', run_as_root=True)
 
         if interface:
             LOG.debug('Adding interface %(interface)s to bridge %(bridge)s',
